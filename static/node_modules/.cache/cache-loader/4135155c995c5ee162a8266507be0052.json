{"remainingRequest":"/opt/projects/rust-wasm/sdl2-mandelbrot/static/node_modules/babel-loader/lib/index.js!/opt/projects/rust-wasm/sdl2-mandelbrot/static/node_modules/vue-loader/lib/selector.js?type=script&index=0!/opt/projects/rust-wasm/sdl2-mandelbrot/static/src/App.vue","dependencies":[{"path":"/opt/projects/rust-wasm/sdl2-mandelbrot/static/src/App.vue","mtime":1643836459899},{"path":"/opt/projects/rust-wasm/sdl2-mandelbrot/static/.babelrc","mtime":1643836459895},{"path":"/opt/projects/rust-wasm/sdl2-mandelbrot/static/node_modules/cache-loader/dist/cjs.js","mtime":1643837744511},{"path":"/opt/projects/rust-wasm/sdl2-mandelbrot/static/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/opt/projects/rust-wasm/sdl2-mandelbrot/static/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Mandelbrot from './Mandelbrot';\nimport MandelbrotWasm from './Mandelbrot-Wasm';\n\nfunction linkNodes(nodes, targets, events) {\n  var _loop = function _loop(node) {\n    var _loop2 = function _loop2(evtName) {\n      node.addEventListener(evtName, function (evt) {\n        if (evt.relatedTarget) {\n          return;\n        }\n\n        dispatch(evtName, evt, targets, nodes, node);\n      });\n    };\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = events[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var evtName = _step2.value;\n\n        _loop2(evtName);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  };\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var node = _step.value;\n\n      _loop(node);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction dispatch(evtName, evt, targets, nodes, except) {\n  var _except$getBoundingCl = except.getBoundingClientRect(),\n      left = _except$getBoundingCl.left,\n      top = _except$getBoundingCl.top;\n\n  nodes.forEach(function (node, i) {\n    if (node == except) return;\n\n    var _node$getBoundingClie = node.getBoundingClientRect(),\n        left1 = _node$getBoundingClie.left,\n        top1 = _node$getBoundingClie.top;\n\n    var e = new MouseEvent(evtName, {\n      bubbles: true,\n      cancelable: true,\n      relatedTarget: except,\n      clientX: evt.clientX - left + left1,\n      clientY: evt.clientY - top + top1\n    });\n    targets[i].dispatchEvent(e);\n  });\n}\n\nexport default {\n  components: {\n    Mandelbrot: Mandelbrot,\n    MandelbrotWasm: MandelbrotWasm\n  },\n  mounted: function mounted() {\n    var a = this.$refs.jsM;\n    var b = this.$refs.wasmM;\n    linkNodes([a.$vnode.elm, b.$vnode.elm], [a.getTarget(), b.getTarget()], ['mousedown', 'mousemove', 'mouseup']);\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;;oDAGA;+BACA;AACA;AACA;;+CACA;AACA;;;;;;;;;AANA;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;AARA;;;AASA;;;;;;;;;;;;;;;;;AAEA;AACA,qCACA;;;;;wBAGA;;AAFA,qCAGA;;;;;eAEA;kBACA;qBACA;oCACA;mCACA,AACA;AANA;6BAOA;AACA;;;AAEA;;;AAEA;;;AACA;AACA,uBACA;AACA,sCACA,wBACA,yCACA,AACA;AACA;AAVA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <h1>js</h1>\n      <mandelbrot ref=\"jsM\" :width=\"640\" :height=\"500\"/>\n    </div>\n    <div>\n      <h1>rust</h1>\n      <mandelbrot-wasm ref=\"wasmM\" :width=\"640\" :height=\"500\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Mandelbrot from './Mandelbrot';\nimport MandelbrotWasm from './Mandelbrot-Wasm';\n\nfunction linkNodes(nodes, targets, events) {\n  for (let node of nodes) {\n    for (let evtName of events) {\n      node.addEventListener(evtName, function(evt) {\n        if (evt.relatedTarget) {\n          return;\n        }\n        dispatch(evtName, evt, targets, nodes, node);\n      });\n    }\n  }\n}\n\nfunction dispatch(evtName, evt, targets, nodes, except) {\n  let { left, top } = except.getBoundingClientRect();\n  nodes.forEach((node, i) => {\n    if (node == except) return;\n\n    let {left: left1, top: top1} = node.getBoundingClientRect();\n    var e = new MouseEvent(evtName, {\n      bubbles: true,\n      cancelable: true,\n      relatedTarget: except,\n      clientX: evt.clientX - left + left1,\n      clientY: evt.clientY - top + top1,\n    });\n    targets[i].dispatchEvent(e);\n  });\n}\n\nexport default {\n  components: { Mandelbrot, MandelbrotWasm },\n  mounted() {\nlet a = this.$refs.jsM;\nlet b = this.$refs.wasmM;\n    linkNodes(\n      [a.$vnode.elm, b.$vnode.elm],\n      [a.getTarget(), b.getTarget()],\n      ['mousedown', 'mousemove', 'mouseup'],\n    );\n  },\n}\n</script>\n\n<style>\nhtml {\n  background-color: #ddd;\n}\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  display: flex;\n  justify-content: center;\n}\ninput {\n  width: 50px;\n  padding: 10px;\n  margin: 0 5px;\n}\n</style>\n"]}]}
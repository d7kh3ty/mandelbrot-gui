{"remainingRequest":"/opt/projects/daedal/static/node_modules/babel-loader/lib/index.js!/opt/projects/daedal/static/node_modules/vue-loader/lib/selector.js?type=script&index=0!/opt/projects/daedal/static/src/Mandelbrot-Wasm.vue","dependencies":[{"path":"/opt/projects/daedal/static/src/Mandelbrot-Wasm.vue","mtime":1643847032152},{"path":"/opt/projects/daedal/static/.babelrc","mtime":1643847032140},{"path":"/opt/projects/daedal/static/node_modules/cache-loader/dist/cjs.js","mtime":1643847033044},{"path":"/opt/projects/daedal/static/node_modules/babel-loader/lib/index.js","mtime":1643847033804},{"path":"/opt/projects/daedal/static/node_modules/vue-loader/lib/selector.js","mtime":1643847032276}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    width: {\n      type: Number,\n      default: 640\n    },\n    height: {\n      type: Number,\n      default: 500\n    }\n  },\n  mounted: function mounted() {\n    Module.canvas = this.$refs.canvas;\n\n    if (Module.calledRun) {\n      Module.startApp();\n    } else {\n      Module.addOnPostRun(function () {\n        Module.startApp();\n      });\n    }\n  },\n  methods: {\n    getTarget: function getTarget() {\n      return this.$refs.canvas;\n    }\n  }\n};",{"version":3,"sources":["Mandelbrot-Wasm.vue"],"names":[],"mappings":";;;;;;AAOA;;;YAIA;eACA,AACA;AAHA;;YAKA;eACA,AACA,AACA;AAJA;AALA;8BAUA;+BAEA;;0BACA;aACA;WACA;sCACA;eACA;AACA;AACA;AACA;;oCAEA;wBACA;AACA,AACA;AAJA;AAtBA","file":"Mandelbrot-Wasm.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container\" :style=\"{width: width + 'px', height: height + 'px'}\">\n    <canvas :width=\"width\" :height=\"height\" ref=\"canvas\"></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    width: {\n      type: Number,\n      default: 640,\n    },\n    height: {\n      type: Number,\n      default: 500,\n    },\n  },\n  mounted() {\n    Module.canvas = this.$refs.canvas;\n  \n    if (Module.calledRun) {\n      Module.startApp();\n    } else {\n      Module.addOnPostRun(() => {\n        Module.startApp();\n      });\n    }\n  },\n  methods: {\n    getTarget() {\n      return this.$refs.canvas;\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  position: relative;\n  display: inline-block;\n  background-color: white;\n  canvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n}\n</style>\n"]}]}